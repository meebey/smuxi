############################################################################
# NSIS install script for Smuxi                                            #
#                                                                          #
# Copyright (C) 2009 Sebastian Schnur <ikkerus@ikkerus.net>                #
# Copyright (C) 2009-2010 Mirco Bauer <meebey@meebey.net>                  #
#                                                                          #
# This program is free software; you can redistribute it and/or modify     #
# it under the terms of the GNU General Public License as published by     #
# the Free Software Foundation; either version 2 of the License, or        #
# (at your option) any later version.                                      #
#                                                                          #
# This program is distributed in the hope that it will be useful,          #
# but WITHOUT ANY WARRANTY; without even the implied warranty of           #
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
# GNU General Public License for more details.                             #
#                                                                          #
# You should have received a copy of the GNU General Public License        #
# along with this program; if not, write to the Free Software              #
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA #
############################################################################

#########################
# main install settings #
#########################

# NSIS's zlib implementation is broken
SetCompressor lzma

!define PRODUCT_NAME "Smuxi"
!define PRODUCT_VERSION "@VERSION@@DEV_VERSION_SUFFIX@"
!define PRODUCT_PUBLISHER "Mirco Bauer <meebey@meebey.net>"
!define PRODUCT_WEB_SITE "http://www.smuxi.org"
!define PRODUCT_DIR_REGKEY "Software\Microsoft\Windows\CurrentVersion\App Paths\smuxi-frontend-gnome.exe"
!define PRODUCT_UNINST_KEY "Software\Microsoft\Windows\CurrentVersion\Uninstall\${PRODUCT_NAME}"
!define PRODUCT_UNINST_ROOT_KEY "HKLM"
!define DOTNET_VERSION "4.0"
!define GTKSHARP_PRODUCT_GUID "{3CB70B01-4BC8-4C0F-B28F-7C6E33F913CC}"
!define GTKSHARP_VERSION "2.12.20"

############################
# MUI 1.67 compatible mode #
############################

!include "MUI.nsh"
!include "WinVer.nsh"

; MUI Settings [please make the path relative]
!define MUI_ABORTWARNING
!define MUI_ICON "../images/icon.ico"
!define MUI_UNICON "../images/icon.ico"

######################
# Language Selection #
######################

; Language Selection Dialog Settings
!define MUI_LANGDLL_REGISTRY_ROOT "${PRODUCT_UNINST_ROOT_KEY}"
!define MUI_LANGDLL_REGISTRY_KEY "${PRODUCT_UNINST_KEY}"
!define MUI_LANGDLL_REGISTRY_VALUENAME "NSIS:Language"

#################
# install pages #
#################

; Welcome page
!insertmacro MUI_PAGE_WELCOME
; License page
!define MUI_LICENSEPAGE_RADIOBUTTONS
!insertmacro MUI_PAGE_LICENSE "../LICENSE"
; Directory page
!insertmacro MUI_PAGE_DIRECTORY
; Instfiles page
!insertmacro MUI_PAGE_INSTFILES
; Finish page
!define MUI_FINISHPAGE_RUN
!define MUI_FINISHPAGE_RUN_TEXT "Run Smuxi"
!define MUI_FINISHPAGE_RUN_FUNCTION "RunSmuxi"
!insertmacro MUI_PAGE_FINISH

; Uninstaller pages
!insertmacro MUI_UNPAGE_INSTFILES

##################
# Language files #
##################

!insertmacro MUI_LANGUAGE "English"
!insertmacro MUI_LANGUAGE "French"
!insertmacro MUI_LANGUAGE "German"
!insertmacro MUI_LANGUAGE "Italian"

###########################
# MUI end                 #
###########################

Name "${PRODUCT_NAME} ${PRODUCT_VERSION}"
OutFile "../smuxi-win32-setup.exe"
InstallDir "$PROGRAMFILES\Smuxi"
InstallDirRegKey HKLM "${PRODUCT_DIR_REGKEY}" ""
ShowInstDetails show
ShowUnInstDetails show

Function .onInit
  !insertmacro MUI_LANGDLL_DISPLAY
FunctionEnd

############
# Macros   #
############

!macro CheckXPServicePack
    ${If} ${IsWinXP}
        goto CheckXP
    ${Else}
        goto CheckXPServicePackEnd
    ${EndIf}

    CheckXP:
        ${If} ${AtLeastServicePack} 2
            DetailPrint "Found Windows XP Service Pack 2 or later"
            goto CheckXPServicePackEnd
        ${Else}
            DetailPrint "Found Windows XP without Service Pack 2."
            MessageBox MB_OK|MB_ICONEXCLAMATION "Smuxi requires Windows XP Service Pack 2 or later." IDOK Abort
        ${EndIf}

    Abort:
        Abort

    CheckXPServicePackEnd:
!macroend

!macro CheckGtkSharp GTKSHARP_REQ
    !define GTKSHARP_FILE         "gtk-sharp-2.12.20.win32.msi"
    !define GTKSHARP_BASE_URL     "http://www.smuxi.org/jaws/data/files/"
    !define GTKSHARP_DOWNLOAD_URL "${GTKSHARP_BASE_URL}${GTKSHARP_FILE}"
    !define GTKSHARP_TEMP_FILE "$TEMP\${GTKSHARP_FILE}"

    DetailPrint "Checking your GTK# version..."
    Var /GLOBAL GTKSHARP_FOUND_VERSION
    # GTK# 2.12.20 uses a Xamarin key
    ReadRegStr $GTKSHARP_FOUND_VERSION HKLM \
              "SOFTWARE\Xamarin\GtkSharp\Version" ""

    # GTK# 2.12.10 uses a Novell key
    ${If} $GTKSHARP_FOUND_VERSION == ""
        ReadRegStr $GTKSHARP_FOUND_VERSION HKLM \
            "SOFTWARE\Novell\GtkSharp\Version" ""
    ${EndIf}

    ${VersionCompare} $GTKSHARP_FOUND_VERSION ${GTKSHARP_REQ} $R0

    ${If} $GTKSHARP_FOUND_VERSION == ""
        goto InstallGtkSharpConfirmation
    ${ElseIf} $R0 == "0"
        DetailPrint "GTK# already installed"
        goto End
    ${ElseIf} $R0 == "1"
        DetailPrint "Newer GTK# already installed"
        goto End
    ${ElseIf} $R0 == "2"
        DetailPrint "Older GTK# found"
        goto InstallGtkSharpConfirmation
    ${EndIf}

    InstallGtkSharpConfirmation:
        MessageBox MB_YESNOCANCEL|MB_ICONEXCLAMATION \
            "Your GTK# version: $GTKSHARP_FOUND_VERSION $\nRequired Version: ${GTKSHARP_REQ} or greater.$\n$\nDownload GTK# from www.smuxi.org?" \
            /SD IDYES IDYES InstallGtkSharp IDNO End
        goto GiveUp ;IDCANCEL

    InstallGtkSharp:
        SetOutPath "$TEMP"
        SetOverwrite on

        DetailPrint "Beginning download of GTK#..."
        NSISDL::download "${GTKSHARP_DOWNLOAD_URL}" "${GTKSHARP_TEMP_FILE}"
        Pop $0
        ${If} $0 == "cancel"
            DetailPrint "Download failed."
            MessageBox MB_YESNO|MB_ICONEXCLAMATION \
            "Download cancelled.  Continue Installation?" \
            IDYES End IDNO GiveUp
        ${ElseIf} $0 != "success"
            DetailPrint "Download failed."
            MessageBox MB_YESNO|MB_ICONEXCLAMATION \
            "Download failed:$\n$0$\n$\nContinue Installation?" \
            IDYES End IDNO GiveUp
        ${EndIf}
        DetailPrint "Download completed."
        DetailPrint "Pausing installation while downloaded GTK# installer runs."
        ${If} $GTKSHARP_FOUND_VERSION != ""
            DetailPrint "Beginning uninstall of old GTK#..."
            ExecWait 'msiexec /x "${GTKSHARP_PRODUCT_GUID}" /passive' $0
            DetailPrint "Uninstall completed. Exit code = '$0'"
        ${EndIf}
        ExecWait 'msiexec /i "${GTKSHARP_TEMP_FILE}" /passive' $0
        DetailPrint "Completed GTK# install. Exit code = '$0'. Removing GTK# installer."
        Delete "${GTKSHARP_TEMP_FILE}"
        DetailPrint "GTK# installer removed."

        # HACK: force reloading the PATH environment variable for the installer
        Var /GLOBAL PATH
        ReadRegStr $PATH HKLM "SYSTEM\CurrentControlSet\Control\Session Manager\Environment" "Path"
        System::Call 'Kernel32::SetEnvironmentVariableA(t, t) i("PATH", "$PATH")'

        # HACK: announce the PATH change to all other applications
        SendMessage ${HWND_BROADCAST} ${WM_WININICHANGE} 0 "STR:Environment" /TIMEOUT=5000

        goto End

    GiveUp:
        Abort "Installation cancelled by user."

    End:
!macroend

# DotNET and MSI version checking macro.
# Written by AnarkiNet(AnarkiNet@gmail.com) originally, modified by eyal0 (for use in http://www.sourceforge.net/projects/itwister)
# MSI check code based on http://www.codeproject.com/useritems/NSIS.asp
# 2009-05-26 Mirco Bauer: updated DOTNET_URL location
# Downloads the MSI version 3.1 and runs it if the user does not have the correct version.
# Downloads and runs the Microsoft .NET Framework version 2.0 Redistributable and runs it if the user does not have the correct version.
# To use, call the macro with a string:
# Example: non real version numbers
# !insertmacro CheckDotNET "2"
# !insertmacro CheckDotNET "2.0.9"
# (Version 2.0.9 is less than version 2.0.10.)
# Example: latest real version number at time of writing
# !insertmacro CheckDotNET "2.0.50727"
# All register variables are saved and restored by CheckDotNet
# No output
 
!macro CheckDotNET DotNetReqVer
# .NET 2.0 - 22 MB
# http://download.microsoft.com/download/5/6/7/567758a3-759e-473e-bf8f-52154438565a/dotnetfx.exe
# .NET 2.0 SP2 - 24 MB
# http://download.microsoft.com/download/c/6/e/c6e88215-0178-4c6c-b5f3-158ff77b1f38/NetFx20SP2_x86.exe
# .NET 3.0 - 50 MB
# http://go.microsoft.com/fwlink/?LinkId=70848
# .NET 3.5 - 197 MB
# http://download.microsoft.com/download/6/0/f/60fc5854-3cb8-4892-b6db-bd4f42510f28/dotnetfx35.exe
# .NET 3.5 Web Installer - 2.4 MB
# http://download.microsoft.com/download/7/0/3/703455ee-a747-4cc8-bd3e-98a615c3aedb/dotNetFx35setup.exe
# .NET 3.5 SP1 - 231 MB
# http://download.microsoft.com/download/2/0/e/20e90413-712f-438c-988e-fdaa79a8ac3d/dotnetfx35.exe
# .NET 3.5 SP1 Web Installer - 3 MB / .NET 2.0 -> 3.5: 52 MB
# http://download.microsoft.com/download/0/6/1/061F001C-8752-4600-A198-53214C69B51F/dotnetfx35setup.exe
# .NET 4.0 Client Profile Web Installer - 1 MB
# - .NET 3.5 SP1 -> 4.0: 43 MB
# http://download.microsoft.com/download/7/B/6/7B629E05-399A-4A92-B5BC-484C74B5124B/dotNetFx40_Client_setup.exe
# .NET 4.0 Full Web Installer - 1 MB
# - .NET 3.5 SP1 -> 4.0: 54 MB
# - .NET 4.0 Client Profile -> 4.0 Full: 15 MB
# http://download.microsoft.com/download/1/B/E/1BE39E79-7E39-46A3-96FF-047F95396215/dotNetFx40_Full_setup.exe
  !define DOTNET_URL "http://download.microsoft.com/download/7/B/6/7B629E05-399A-4A92-B5BC-484C74B5124B/dotNetFx40_Client_setup.exe"
  !define MSI31_URL "http://download.microsoft.com/download/1/4/7/147ded26-931c-4daf-9095-ec7baf996f46/WindowsInstaller-KB893803-v2-x86.exe"
 
  DetailPrint "Checking your .NET Framework version..."
  ;callee register save
  Push $0
  Push $1
  Push $2
  Push $3
  Push $4
  Push $5
  Push $6 ;backup of installed ver
  Push $7 ;backup of DoNetReqVer
 
 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 ;                               MSI                                          ;
 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  GetDLLVersion "$SYSDIR\msi.dll" $R0 $R1
  IntOp $R2 $R0 / 0x00010000 ; $R2 now contains major version
  IntOp $R3 $R0 & 0x0000FFFF ; $R3 now contains minor version
  IntOp $R4 $R1 / 0x00010000 ; $R4 now contains release
  IntOp $R5 $R1 & 0x0000FFFF ; $R5 now contains build
  StrCpy $0 "$R2.$R3.$R4.$R5" ; $0 now contains string like "1.2.0.192"
 
  ${If} $R2 < '3'
    ;options
    SetOutPath "$TEMP"
    SetOverwrite on
 
    MessageBox MB_YESNOCANCEL|MB_ICONEXCLAMATION \
    "Your MSI version: $0 $\nRequired Version: 3 or greater.$\n$\nDownload MSI version from www.microsoft.com?" \
    /SD IDYES IDYES DownloadMSI IDNO NewMSI
    goto GiveUpDotNET ;IDCANCEL
 
  ${Else}
 
    DetailPrint "MSI3.1 already installed"
    goto NewMSI
  ${EndIf}
 
DownloadMSI:
  DetailPrint "Beginning download of MSI3.1."
  NSISDL::download ${MSI31_URL} "$TEMP\WindowsInstaller-KB893803-v2-x86.exe"
  DetailPrint "Completed download."
  Pop $0
  ${If} $0 == "cancel"
    MessageBox MB_YESNO|MB_ICONEXCLAMATION \
    "Download cancelled.  Continue Installation?" \
    IDYES NewMSI IDNO GiveUpDotNET
  ${ElseIf} $0 != "success"
    MessageBox MB_YESNO|MB_ICONEXCLAMATION \
    "Download failed:$\n$0$\n$\nContinue Installation?" \
    IDYES NewMSI IDNO GiveUpDotNET
  ${EndIf}
  DetailPrint "Pausing installation while downloaded MSI3.1 installer runs."
  ExecWait '$TEMP\WindowsInstaller-KB893803-v2-x86.exe /quiet /norestart' $0
  DetailPrint "Completed MSI3.1 install/update. Exit code = '$0'. Removing MSI3.1 installer."
  Delete "$TEMP\WindowsInstaller-KB893803-v2-x86.exe"
  DetailPrint "MSI3.1 installer removed."
  goto NewMSI
 
NewMSI:
  DetailPrint "MSI3.1 installation done. Proceeding with remainder of installation."
 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 
 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 ;                                  NetFX                                     ;
 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  StrCpy $7 "${DotNetReqVer}"
 
  System::Call "mscoree::GetCORVersion(w .r0, i ${NSIS_MAX_STRLEN}, *i r2r2) i .r1 ?u"
 
  ${If} $0 == 0
  	DetailPrint ".NET Framework not found, download is required for program to run."
    Goto NoDotNET
  ${EndIf}
 
  Var /GLOBAL NET35_INSTALL
  Var /GLOBAL NET35_SP
  Var /GLOBAL NET4_INSTALL
  ReadRegStr $NET35_INSTALL HKLM \
          "SOFTWARE\Microsoft\NET Framework Setup\NDP\v3.5" "Install"
  ReadRegStr $NET35_SP HKLM \
          "SOFTWARE\Microsoft\NET Framework Setup\NDP\v3.5" "SP"
  ReadRegStr $NET4_INSTALL HKLM \
          "SOFTWARE\Microsoft\NET Framework Setup\NDP\v4\Client" "Install"

  ${If} $NET4_INSTALL == "1"
      DetailPrint ".NET Framework Version 4.0 found"
      goto NewDotNET
  ${ElseIf} $NET35_INSTALL == "1"
      StrCpy $6 "$0"
      DetailPrint ".NET Framework Version found: 3.5, but is older than the required version: $7"
      goto OldDotNET
  ${Else}
      goto NoDotNET
  ${EndIf}

NoDotNET:
    MessageBox MB_YESNOCANCEL|MB_ICONEXCLAMATION \
    ".NET Framework not installed.$\nRequired Version: $7 or greater.$\n$\nDownload .NET Framework $7 from www.microsoft.com?" \
    /SD IDYES IDYES DownloadDotNET IDNO NewDotNET
    goto GiveUpDotNET ;IDCANCEL

OldDotNET:
    MessageBox MB_YESNOCANCEL|MB_ICONEXCLAMATION \
    "Your .NET Framework version: $6 $\nRequired Version: $7 or greater.$\n$\nDownload .NET Framework $7 from www.microsoft.com?" \
    /SD IDYES IDYES DownloadDotNET IDNO NewDotNET
    goto GiveUpDotNET ;IDCANCEL
 
DownloadDotNET:
  DetailPrint "Beginning download of latest .NET Framework version."
  NSISDL::download ${DOTNET_URL} "$TEMP\dotnetfx.exe"
  DetailPrint "Completed download."
  Pop $0
  ${If} $0 == "cancel"
    MessageBox MB_YESNO|MB_ICONEXCLAMATION \
    "Download cancelled.  Continue Installation?" \
    IDYES NewDotNET IDNO GiveUpDotNET
  ${ElseIf} $0 != "success"
    MessageBox MB_YESNO|MB_ICONEXCLAMATION \
    "Download failed:$\n$0$\n$\nContinue Installation?" \
    IDYES NewDotNET IDNO GiveUpDotNET
  ${EndIf}
  DetailPrint "Pausing installation while downloaded .NET Framework installer runs."
  DetailPrint ""
  DetailPrint "!!! Depending on your internet bandwidth and computer performance"
  DetailPrint "!!! this can take a while (up to 10 minutes). Please be patient!"
  ExecWait '$TEMP\dotnetfx.exe /passive /norestart'
  DetailPrint "Completed .NET Framework install/update. Removing .NET Framework installer."
  Delete "$TEMP\dotnetfx.exe"
  DetailPrint ".NET Framework installer removed."
  goto NewDotNet
 
GiveUpDotNET:
  Abort "Installation cancelled by user."
 
NewDotNET:
  DetailPrint "Proceeding with remainder of installation."
  Pop $7
  Pop $6
  Pop $5
  Pop $4
  Pop $3
  Pop $2
  Pop $1
  Pop $0
!macroend

Function VersionCompare
	!define VersionCompare `!insertmacro VersionCompareCall`

	!macro VersionCompareCall _VER1 _VER2 _RESULT
		Push `${_VER1}`
		Push `${_VER2}`
		Call VersionCompare
		Pop ${_RESULT}
	!macroend

	Exch $1
	Exch
	Exch $0
	Exch
	Push $2
	Push $3
	Push $4
	Push $5
	Push $6
	Push $7

	begin:
	StrCpy $2 -1
	IntOp $2 $2 + 1
	StrCpy $3 $0 1 $2
	StrCmp $3 '' +2
	StrCmp $3 '.' 0 -3
	StrCpy $4 $0 $2
	IntOp $2 $2 + 1
	StrCpy $0 $0 '' $2

	StrCpy $2 -1
	IntOp $2 $2 + 1
	StrCpy $3 $1 1 $2
	StrCmp $3 '' +2
	StrCmp $3 '.' 0 -3
	StrCpy $5 $1 $2
	IntOp $2 $2 + 1
	StrCpy $1 $1 '' $2

	StrCmp $4$5 '' equal

	StrCpy $6 -1
	IntOp $6 $6 + 1
	StrCpy $3 $4 1 $6
	StrCmp $3 '0' -2
	StrCmp $3 '' 0 +2
	StrCpy $4 0

	StrCpy $7 -1
	IntOp $7 $7 + 1
	StrCpy $3 $5 1 $7
	StrCmp $3 '0' -2
	StrCmp $3 '' 0 +2
	StrCpy $5 0

	StrCmp $4 0 0 +2
	StrCmp $5 0 begin newer2
	StrCmp $5 0 newer1
	IntCmp $6 $7 0 newer1 newer2

	StrCpy $4 '1$4'
	StrCpy $5 '1$5'
	IntCmp $4 $5 begin newer2 newer1

	equal:
	StrCpy $0 0
	goto end
	newer1:
	StrCpy $0 1
	goto end
	newer2:
	StrCpy $0 2

	end:
	Pop $7
	Pop $6
	Pop $5
	Pop $4
	Pop $3
	Pop $2
	Pop $1
	Exch $0
FunctionEnd

Function RunSmuxi
	ExecShell "" "$SMPROGRAMS\Smuxi\Smuxi.lnk"
FunctionEnd

############
# Sections #
############

Section "Main" SEC01
  !insertmacro CheckXPServicePack
  !insertmacro CheckDotNET "${DOTNET_VERSION}"
  !insertmacro CheckGtkSharp ${GTKSHARP_VERSION}

  SetShellVarContext all
  SetOutPath "$INSTDIR"

  CreateDirectory "$SMPROGRAMS\Smuxi"
  CreateShortCut "$SMPROGRAMS\Smuxi\Smuxi.lnk" "$INSTDIR\smuxi-frontend-gnome.exe"
  CreateShortCut "$DESKTOP\Smuxi.lnk" "$INSTDIR\smuxi-frontend-gnome.exe"

  # remove obsolete libraries for upgrades from Smuxi < 0.8.10.2
  Delete "$INSTDIR\zlib1.dll"
  Delete "$INSTDIR\MonoPosixHelper.dll"

  SetOverwrite on
  File "../bin-win32/log4net.dll"
  File "../bin-win32/Meebey.SmartIrc4net.dll"
  File "../bin-win32/StarkSoftProxy.dll"
  File "../bin-win32/Mono.Posix.dll"
  File "../bin-win32/Nini.dll"
  File "../bin-win32/Twitterizer2.dll"
  File "../bin-win32/Newtonsoft.Json.dll"
  File "../bin-win32/agsxmpp.dll"
  File "../bin-win32/Db4objects.Db4o.dll"
  File "../bin-win32/ServiceStack.Text.dll"
  File "../bin-win32/ServiceStack.Interfaces.dll"
  File "../bin-win32/ServiceStack.Common.dll"
  File "../bin-win32/Microsoft.AspNet.SignalR.Client.dll"
  File "../bin-win32/JabbR.Client.dll"
  File "../bin-win32/smuxi-common.dll"
  File "../bin-win32/smuxi-engine-campfire.dll"
  File "../bin-win32/smuxi-engine-irc.dll"
  File "../bin-win32/smuxi-engine-jabbr.dll"
  File "../bin-win32/smuxi-engine-twitter.dll"
  File "../bin-win32/smuxi-engine-xmpp.dll"
  File "../bin-win32/smuxi-engine.dll"
  File "../bin-win32/smuxi-frontend-gnome-irc.dll"
  File "../bin-win32/smuxi-frontend-gnome.exe"
  File "../bin-win32/smuxi-frontend-gnome.exe.config"
  File "../bin-win32/smuxi-frontend.dll"
  File "../bin-win32/smuxi-server.exe"
  File "../bin-win32/smuxi-server.exe.config"
  File "../bin-win32/plink.exe"
  File "../bin-win32/Fixedsys500c.ttf"
  File /nonfatal /r "../bin-win32/locale"
  File /nonfatal /r "../bin-win32/icons"

  IfFileExists "$FONTS/Fixedsys500c.ttf" SkipFont InstallFont

  SkipFont:
    DetailPrint "Fixed-Sys font already installed"
    goto MainEnd

  InstallFont:
    DetailPrint "Installing Fixed-Sys font..."
    CopyFiles "$INSTDIR\Fixedsys500c.ttf" "$FONTS"
    System::Call "GDI32::AddFontResourceA(t) i ('Fixedsys500c.ttf') .s"
    WriteRegStr "HKLM" "Software\Microsoft\Windows NT\CurrentVersion\Fonts" "Fixedsys TTF V5.00c (TrueType)" "Fixedsys500c.ttf"
    SendMessage ${HWND_BROADCAST} ${WM_FONTCHANGE} 0 0 /TIMEOUT=5000
    DetailPrint "Done."
    goto MainEnd

  MainEnd:
SectionEnd

Section -AdditionalIcons
  WriteIniStr "$INSTDIR\${PRODUCT_NAME}.url" "InternetShortcut" "URL" "${PRODUCT_WEB_SITE}"
  CreateShortCut "$SMPROGRAMS\Smuxi\Website.lnk" "$INSTDIR\${PRODUCT_NAME}.url"
  CreateShortCut "$SMPROGRAMS\Smuxi\Uninstall.lnk" "$INSTDIR\uninst.exe"
SectionEnd

Section -Post
  WriteUninstaller "$INSTDIR\uninst.exe"
  WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_DIR_REGKEY}" "" "$INSTDIR\smuxi-frontend-gnome.exe"
  WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "DisplayName" "$(^Name)"
  WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "UninstallString" "$INSTDIR\uninst.exe"
  WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "DisplayIcon" "$INSTDIR\smuxi-frontend-gnome.exe"
  WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "DisplayVersion" "${PRODUCT_VERSION}"
  WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "URLInfoAbout" "${PRODUCT_WEB_SITE}"
  WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "Publisher" "${PRODUCT_PUBLISHER}"
SectionEnd


Function un.onUninstSuccess
  HideWindow
  MessageBox MB_ICONINFORMATION|MB_OK "$(^Name) was successfully uninstalled."
FunctionEnd

Function un.onInit
!insertmacro MUI_UNGETLANGUAGE
  MessageBox MB_ICONQUESTION|MB_YESNO|MB_DEFBUTTON2 "Do you want to unistall $(^Name) and all it's components?" IDYES +2
  Abort
FunctionEnd

Section Uninstall
  SetShellVarContext all
  Delete "$INSTDIR\${PRODUCT_NAME}.url"
  Delete "$INSTDIR\uninst.exe"
  Delete "$INSTDIR\smuxi-server.exe.config"
  Delete "$INSTDIR\smuxi-server.exe"
  Delete "$INSTDIR\smuxi-server.log"
  Delete "$INSTDIR\smuxi-frontend.dll"
  Delete "$INSTDIR\smuxi-frontend-gnome.exe.config"
  Delete "$INSTDIR\smuxi-frontend-gnome.exe"
  Delete "$INSTDIR\smuxi-frontend-gnome.log"
  Delete "$INSTDIR\smuxi-frontend-gnome-irc.dll"
  Delete "$INSTDIR\smuxi-engine.dll"
  Delete "$INSTDIR\smuxi-engine-campfire.dll"
  Delete "$INSTDIR\smuxi-engine-irc.dll"
  Delete "$INSTDIR\smuxi-engine-jabbr.dll"
  Delete "$INSTDIR\smuxi-engine-twitter.dll"
  Delete "$INSTDIR\smuxi-engine-xmpp.dll"
  Delete "$INSTDIR\smuxi-common.dll"
  Delete "$INSTDIR\Twitterizer2.dll"
  Delete "$INSTDIR\Newtonsoft.Json.dll"
  Delete "$INSTDIR\agsxmpp.dll"
  Delete "$INSTDIR\Db4objects.Db4o.dll"
  Delete "$INSTDIR\Nini.dll"
  Delete "$INSTDIR\Mono.Posix.dll"
  Delete "$INSTDIR\Meebey.SmartIrc4net.dll"
  Delete "$INSTDIR\StarkSoftProxy.dll"
  Delete "$INSTDIR\ServiceStack.Text.dll"
  Delete "$INSTDIR\ServiceStack.Interfaces.dll"
  Delete "$INSTDIR\ServiceStack.Common.dll"
  Delete "$INSTDIR\Microsoft.AspNet.SignalR.Client.dll"
  Delete "$INSTDIR\JabbR.Client.dll"
  Delete "$INSTDIR\log4net.dll"
  Delete "$INSTDIR\plink.exe"
  Delete "$INSTDIR\Fixedsys500c.ttf"
  RMDir /r "$INSTDIR\locale"
  RMDir /r "$INSTDIR\icons"

  Delete "$DESKTOP\Smuxi.lnk"
  Delete "$SMPROGRAMS\Smuxi\Uninstall.lnk"
  Delete "$SMPROGRAMS\Smuxi\Website.lnk"
  Delete "$SMPROGRAMS\Smuxi\Smuxi.lnk"

  RMDir "$SMPROGRAMS\Smuxi"
  RMDir "$INSTDIR"

  DeleteRegKey ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}"
  DeleteRegKey ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_DIR_REGKEY}"
  SetAutoClose true
SectionEnd
